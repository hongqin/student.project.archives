install.packages("MASS")
library(MASS)
install.packages("ape")
install.packages(new.packages())
library(ape)
library("ape");#
tr = read.tree("tree.nwk");#
plot(tr);
install("ape")
install.packages("ape")
 source("http://bioconductor.org/biocLite.R")#
    biocLite("KEGG.db")
 source("http://bioconductor.org/biocLite.R")#
    biocLite("AnnotationDbi")
install.packages("genetree")
library(qvalue)
install.packages()
library(qgen)
help(package=qgen)
Sys.setenv(DISPLAY=":0")
library(qvalue)
p=rnorm(100,0.9,1)
start <-  strptime("23/7/10 11:40", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("28/7/10 16:20", "%d/%m/%y %H:%M") #
end - start#
end  <-    strptime("28/7/10 8:10", "%d/%m/%y %H:%M") #
end - start
#
debug = 1; #
#
#system( "ls sandbox/*csv > /tmp/_filelist.tab")#
fltb = read.table("_ls.B3.txt", as.is=T)#
#
mycol = c("black", rainbow( 3 ) ); #
mypch = c(19,18,15,16,17,14,11);
c=1;#
 myfl = fltb[c,1]#
  tb = read.csv(myfl) #
 #  tb = tb[ tb$Treatment=='PI',]#
  plot( tb$s ~ tb$t, col="black", ylim=c(0., 1.1), pch=mypch[1], xlab= "Days", ylab="viability", main="B3" ); #
 #
  #average the points#
  t = unique(tb$t)#
  s = t;
#
start <-  strptime("23/7/10 11:40", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("29/7/10 17:50", "%d/%m/%y %H:%M") #
end - start#
end  <-    strptime("30/7/10 17:15", "%d/%m/%y %H:%M") #
end - start#
#
start <-  strptime("28/7/10 10:30", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("29/7/10 17:50", "%d/%m/%y %H:%M") #
end - start#
end  <-    strptime("30/7/10 17:15", "%d/%m/%y %H:%M") #
end - start
start <-  strptime("14/7/10 13:04", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("29/7/10 17:50", "%d/%m/%y %H:%M") #
end - start
start <-  strptime("23/7/10 11:40", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("31/7/10 14:33", "%d/%m/%y %H:%M") #
end - start#
end  <-    strptime("30/7/10 17:15", "%d/%m/%y %H:%M") #
end - start#
#
start <-  strptime("28/7/10 10:30", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("31/7/10 14:33", "%d/%m/%y %H:%M") #
end - start
#A3EthOH#
start <-  strptime("28/7/10 10:30", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("8/1/10 15:27", "%d/%m/%y %H:%M") #
end - start
#A3EthOH#
start <-  strptime("28/7/10 10:30", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("1/8/10 15:27", "%d/%m/%y %H:%M") #
end - start
#B3#
start <-  strptime("23/7/10 11:40", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("1/8/10 15:27", "%d/%m/%y %H:%M") #
end - start
start <-  strptime("14/7/10 13:04", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("1/8/10 17:50", "%d/%m/%y %H:%M") #
end - start
#old #
start <-  strptime("28/6/10 12:14", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("29/7/10 17:50", "%d/%m/%y %H:%M") #
end - start#
end  <-    strptime("1/8/10 15:00", "%d/%m/%y %H:%M") #
end - start
#B3#
start <-  strptime("23/7/10 11:40", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("2/8/10 13:05", "%d/%m/%y %H:%M") #
end - start#
#
#A3EthOH#
start <-  strptime("28/7/10 10:30", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("2/8/10 13:05", "%d/%m/%y %H:%M") #
end - start
#old cls#
start <-  strptime("28/6/10 12:04", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("3/8/10 12:39", "%d/%m/%y %H:%M") #
end - start
#B3#
start <-  strptime("23/7/10 11:40", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("3/8/10 13:00", "%d/%m/%y %H:%M") #
end - start
#
#A3EthOH#
start <-  strptime("28/7/10 10:30", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("3/8/10 13:00", "%d/%m/%y %H:%M") #
end - start
#FaySanger#
start <-  strptime("14/7/10 13:04", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("3/8/10 12:39", "%d/%m/%y %H:%M") #
end - start
#
#B3#
start <-  strptime("23/7/10 11:40", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("4/8/10 17:20", "%d/%m/%y %H:%M") #
end - start#
#
#A3EthOH#
start <-  strptime("28/7/10 10:30", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("4/8/10 17:20", "%d/%m/%y %H:%M") #
end - start
#
#B3#
start <-  strptime("23/7/10 11:40", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("5/8/10 13:30", "%d/%m/%y %H:%M") #
end - start#
#
#A3EthOH#
start <-  strptime("28/7/10 10:30", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("5/8/10 13:30", "%d/%m/%y %H:%M") #
end - start
#A3EthOH#
start <-  strptime("28/7/10 10:30", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("4/8/10 17:20", "%d/%m/%y %H:%M") #
end - start#
end  <-    strptime("5/8/10 13:30", "%d/%m/%y %H:%M") #
end - start
#FaySanger#
start <-  strptime("14/7/10 13:04", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("6/8/10 13:30", "%d/%m/%y %H:%M") #
end - start
#old cls#
start <-  strptime("28/6/10 12:04", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("6/8/10 13:30", "%d/%m/%y %H:%M") #
end - start
#B3#
start <-  strptime("23/7/10 11:40", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("6/8/10 18:10", "%d/%m/%y %H:%M") #
end - start
#A3EthOH#
start <-  strptime("28/7/10 10:30", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("6/8/10 18:10", "%d/%m/%y %H:%M") #
end - start
#B3#
start <-  strptime("23/7/10 11:40", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("7/8/10 15:00", "%d/%m/%y %H:%M") #
end - start#
#
#A3EthOH#
start <-  strptime("28/7/10 10:30", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("7/8/10 15:00", "%d/%m/%y %H:%M") #
end - start
#A3EthOH#
start <-  strptime("28/7/10 10:30", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("7/8/10 15:00", "%d/%m/%y %H:%M") #
end - start
#B3#
start <-  strptime("23/7/10 11:40", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("8/8/10 17:40", "%d/%m/%y %H:%M") #
end - start#
#
#A3EthOH#
start <-  strptime("28/7/10 10:30", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("8/8/10 17:40", "%d/%m/%y %H:%M") #
end - start
#FaySanger#
start <-  strptime("14/7/10 13:04", "%d/%m/%y %H:%M") #B3C5#
end  <-    strptime("9/8/10 15:55", "%d/%m/%y %H:%M") #
end - start#
end  <-    strptime("11/8/10 13:30", "%d/%m/%y %H:%M") #
end - start#
end  <-    strptime("16/8/10 13:30", "%d/%m/%y %H:%M") #
end - start#
end  <-    strptime("22/8/10 14:45", "%d/%m/%y %H:%M") #
end - start
2010-1825
x = seq(1:10)
y = x + rnorm(10)
m = lm( y ~ x)
summarly(lm(y ~ x))
summary(lm(y ~ x))
ls
ls()
m
summary(m)
?sapply
i39 <- sapply(3:9, seq) # list of vectors
i39
?seq
seq(3)
seq(3)
?sapply
x = rnorm(10)
y = x + rnorm(10)/3
z = x + y;
tb= cbind(x,y,z)
tb
myfun = function(x,y) { y - x}
sapply(tb[,1:2], myfun)
?tapply
require(stats)#
groups <- as.factor(rbinom(32, n = 5, prob = 0.4))#
tapply(groups, groups, length) #- is almost the same as#
table(groups)#
#
## contingency table from data.frame : array with named dimnames#
tapply(warpbreaks$breaks, warpbreaks[,-1], sum)#
tapply(warpbreaks$breaks, warpbreaks[, 3, drop = FALSE], sum)
warpbreaks
warpbreaks[1:5,]
tapply(warpbreaks$breaks, warpbreaks[,-1], sum)
warpbreaks[1:5,-1]
tapply(warpbreaks$breaks, warpbreaks[,-1], mean)
tapply(warpbreaks$breaks, warpbreaks[,-1], table)
tapply(warpbreaks$breaks, warpbreaks[,-1], sum)
tapply(warpbreaks$breaks, warpbreaks[,-1], func(x,y){ if(x =="A") print y; } )
tapply(warpbreaks$breaks, warpbreaks[,-1], func(x,y) print x)
tapply(warpbreaks$breaks, warpbreaks[,-1], func(x,y) print x))
tapply(warpbreaks$breaks, warpbreaks[,-1], function(x) print x)
tapply(warpbreaks$breaks, warpbreaks[,-1], function(x) {print x} )
tapply(warpbreaks$breaks, warpbreaks[,1], function(x) {print x} )
tapply(warpbreaks$breaks, warpbreaks[,1], function(x) {n = 1} )
tapply(warpbreaks$breaks, warpbreaks[,1], function(x) {print(x)} )
tapply(warpbreaks$breaks, warpbreaks[,1], function(x) {print(x)} )
ls()
groups
start
tb
tb = dataframe(tb)
tb = data.frame(tb)
tb
tapply(x, sum)
tapply(tb, sum)
tapply(tb, 1,sum)
tapply(tb, 2,sum)
tapply(tb, 1,sum)
tapply(x, 1,sum)
tapply(x,sum)
sapply(x, sum)
tapply(tb, tb[,-1], sum)
tapply(tb, sum)
?tapply
tapply(tb, tb, sum)
tb
tapply(tb, tb, sum)
?apply
apply(tb, sum)
apply(tb, 1,sum)
apply(tb, 2,sum)
apply(tb[,-1], 2,sum)
apply(tb[,-1], 1,sum)
apply(tb, 1, function(tb$y,tb$z) {tb$z - tb$y} )
apply(tb, 1, function(x,y,z) {z-y} )
apply(tb, 1, function(x,y) {z-y} )
apply(tb, 1, function(x,y) {y-x} )
apply(tb[,-1], 1,sum)
apply(tb[,-1], 2,sum)
apply(tb[,3], 2,function(x){ifx>0 ret NA})
apply(tb[,3], 2,function(x){ x = NA})
apply(tb[,3], 2,mean)
tb
apply(tb[,3], 2, sum)
apply(tb, 2, sum)
apply(tb, 2, sum)
sum(tb$x)
apply(tb, 2, sd)
apply(tb, 1, sd)
apply(tb, 1, sd)
