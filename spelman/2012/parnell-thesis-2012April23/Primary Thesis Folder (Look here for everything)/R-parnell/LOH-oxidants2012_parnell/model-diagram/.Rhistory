} #i loop
facFlList
# 2012 March 27. Qin add gate to filter the data.
#    It looks like the gates can changes substaintially between BY strains and wild isolates, which
#     poses problems for batch analysis.
# FSC and SSC are out of range, probably because I used E03 that is too high.
# FL3 has a very high 0 peak and need to be filter out.
#
rm(list=ls())
debug = 0;
setwd("~/lab/spelman.lab/calibur/lab/20120321-tor1-DHE")
require(flowCore);  require(flowClust)
facFlList = list.files( path="fcs/");  facFlList
for (  i in 1: length(facFlList) ) {
# i = 1;
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
if(debug>0) {    myfcs@exprs = myfcs@exprs[1000:3000, ]   }
#remove debris, I used E03 here (too high)
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(1E3, Inf), "SSC-H"=c(1E3, Inf), "FL3-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
pdf(paste("sandbox/_", facFlList[i], ".pdf", sep=""), width=8, height=11);
par(new=T)
par(mfrow = c(3, 3))
for (j in 1:5 ) {
hist( mydata[,j], breaks=100, xlab=mynames[j], main= facFlList[i], xlim=c(0,4.5), freq=F )
}
plot( mydata[,2] ~ mydata[,1], pch=3, xlab=mynames[1], ylab=mynames[2], xlim=c(0,4.5), ylim=c(0,4.5))
plot( mydata[,5] ~ mydata[,1], pch=3, xlab=mynames[1], ylab=mynames[5], xlim=c(0,4.5), ylim=c(0,4.5))
plot( mydata[,4] ~ mydata[,1], pch=3, xlab=mynames[1], ylab=mynames[4], xlim=c(0,4.5), ylim=c(0,4.5))
dev.off();
} #i loop
rm(list=ls())
debug = 0;
setwd("~/lab/spelman.lab/calibur/lab/20120321-tor1-DHE")
require(flowCore);  require(flowClust)
facFlList = list.files( path="fcs/");  facFlList
for (  i in 1: length(facFlList) ) {
# i = 1;
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
if(debug>0) {    myfcs@exprs = myfcs@exprs[1000:3000, ]   }
#remove debris, I used E03 here (too high)
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(1E3, Inf), "SSC-H"=c(1E3, Inf), "FL3-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
pdf(paste("sandbox/_", facFlList[i], ".pdf", sep=""), width=8, height=11);
par(new=T)
par(mfrow = c(3, 3))
for (j in 1:5 ) {
hist( mydata[,j], breaks=100, xlab=mynames[j], main= facFlList[i], xlim=c(0,4.5), freq=F )
}
plot( mydata[,2] ~ mydata[,1], pch=3, xlab=mynames[1], ylab=mynames[2], xlim=c(0,4.5), ylim=c(0,4.5))
plot( mydata[,5] ~ mydata[,1], pch=3, xlab=mynames[1], ylab=mynames[5], xlim=c(0,4.5), ylim=c(0,4.5))
plot( mydata[,4] ~ mydata[,1], pch=3, xlab=mynames[1], ylab=mynames[4], xlim=c(0,4.5), ylim=c(0,4.5))
dev.off();
} #i loop
# 2012 March 27. Qin add gate to filter the data.
#    It looks like the gates can changes substaintially between BY strains and wild isolates, which
#     poses problems for batch analysis.
#
# FSC and SSC are out of range, probably because I used E03 that is too high.
# FL3 has a very high 0 peak and need to be filter out.
#
rm(list=ls())
setwd("~/lab/spelman.lab/calibur/lab/20120222-0.05Glu")
debug = 0;
require(flowCore);  require(flowClust); require(hexbin)
facFlList = list.files( path="fcs/");  facFlList
for (  i in 1: length(facFlList) ) {
# i = 1;
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
if(debug>0) {    myfcs@exprs = myfcs@exprs[1000:3000, ]   }
#remove debris, I used E03 before 2012 March 28.
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(0.5E3, Inf), "SSC-H"=c(0.5E3, Inf), "FL3-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
pdf(paste("sandbox/_", facFlList[i], ".pdf", sep=""), width=8, height=11);
par(new=T)
par(mfrow = c(3, 3))
for (j in 1:5 ) {
hist( mydata[,j], breaks=100, xlab=mynames[j], main= facFlList[i], xlim=c(0,4.5), freq=F )
}
plot( mydata[,2] ~ mydata[,1], pch=3, xlab=mynames[1], ylab=mynames[2], xlim=c(0,4.5), ylim=c(0,4.5))
plot( mydata[,5] ~ mydata[,1], pch=3, xlab=mynames[1], ylab=mynames[5], xlim=c(0,4.5), ylim=c(0,4.5))
plot( mydata[,4] ~ mydata[,1], pch=3, xlab=mynames[1], ylab=mynames[4], xlim=c(0,4.5), ylim=c(0,4.5))
#hexbin(x,y)
#plot( hexbin(mydata[,1], mydata[,2] ), pch=3, xlab=mynames[1], ylab=mynames[2], xlim=c(0,4.5), ylim=c(0,4.5))
#plot( hexbin(mydata[,1], mydata[,5] ), pch=3, xlab=mynames[1], ylab=mynames[5], xlim=c(0,4.5), ylim=c(0,4.5))
#plot( hexbin(mydata[,4] ~ mydata[,1]), pch=3, xlab=mynames[1], ylab=mynames[4], xlim=c(0,4.5), ylim=c(0,4.5))
dev.off();
} #i loop
setwd("~/lab/spelman.lab/calibur/lab/20120222-0.05Glu")
setwd("~/projects/LOH-oxidants2012.osX/regression")
rm(list=ls())
setwd("~/projects/LOH-oxidants2012.osX/regression")
facFlList = list.files( path="fcs/");  facFlList
facFlList = list.files( path="data/");  facFlList
facFlList = list.files( path="../data/");  facFlList
"M1-2,Apr22,2011.H2O2onLOH.csv
""
''
"
facFlList = list.files( path="../data/");  facFlList
myfile = paste("../data/", "M1-2,Apr22,2011.H2O2onLOH.csv");
myfile
tb = read.csv(myfile)
myfile = paste("../data/", "M1-2,Apr22,2011.H2O2onLOH.csv", sep="");
tb = read.csv(myfile)
tb
head(tb)
Tv = 0.05
Tb = 0.02
t = seq(0, 0.3, by=0.001)
w = 2;
v = logistical.viability( Tv, w, t)
#these are my old function for CLS-H2O2
logistical.viability <- function( T, w, t ) { ret <- 1 /( 1 + ( t / T )^ w );  }
logistical.black     <- function(b.max, b.min, T, w, t ) { ret <- b.max - (b.max - b.min) /( 1 + ( t / T )^ w );  }
Tv = 0.05
Tb = 0.02
t = seq(0, 0.3, by=0.001)
w = 2;
v = logistical.viability( Tv, w, t)
plot( v ~ t)
plot( v ~ t, type='l')
plot( v ~ t, type='l', color='blue')
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue')
plot( v ~ t, type='l', col='blue', log='x')
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0,0.5))
plot( v ~ t, type='l', col='blue', log='x', xlim=c(1E-4,0.5))
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5))
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5))
b.max = 0.04; b.min = 0.002;
b = logistical.black( Tb, w, t)
lines( b ~ t, )
b = logistical.black( b.max, b.min, Tb, w, t)
lines( b ~ t, )
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5))
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='')
axis(4, pretty(range(tbf$Black)))
axis(4, pretty(range(b)))
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5))
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
Tv = 0.05
Tb = 0.015
t = seq(0, 0.3, by=0.001)
w = 2;
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5))
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5))
points( Tv, 0.5, pch=19, col="blue", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Tv",side=1,at=c(Tv) );
points( Tv, 0.5, pch=19, col="blue", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="blue");
mtext( "Tv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="black", cex=1.2 );
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5))
points( Tv, 0.5, pch=19, col="blue", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Tv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="black", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orage");
mtext( "Tb",side=1,at=c(Tb) );
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5))
points( Tv, 0.5, pch=19, col="blue", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Tv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="black", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Tb",side=1,at=c(Tb) );
?mtext
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5))
points( Tv, 0.5, pch=19, col="blue", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Tv",side=3,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="black", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Tb",side=3,at=c(Tb) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="black", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Tb",side=1,at=c(Tb, 0.02) );
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5))
points( Tv, 0.5, pch=19, col="blue", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Tv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="black", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Tb",side=1,at=c(Tb, 0.02) );
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5))
points( Tv, 0.5, pch=19, col="blue", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Tv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="black", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Tb",side=1,at=c(Tb) );
?axis
Tv = 0.05
Tb = 0.015
t = seq(0, 0.3, by=0.001)
w = 2;
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5))
points( Tv, 0.5, pch=19, col="blue", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Tv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="black", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Tb",side=1,at=c(Tb) );
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5), xlab='H2O2 fraction', ylab='viability')
points( Tv, 0.5, pch=19, col="blue", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Tv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="black", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Tb",side=1,at=c(Tb) );
# logistical models for Parnell's thesis on H2O2-LOH effect
#these are my old function for CLS-H2O2
logistical.viability <- function( T, w, t ) { ret <- 1 /( 1 + ( t / T )^ w );  }
logistical.black     <- function(b.max, b.min, T, w, t ) { ret <- b.max - (b.max - b.min) /( 1 + ( t / T )^ w );  }
Tv = 0.05
Tb = 0.015
t = seq(0, 0.3, by=0.001)
w = 2;
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5), xlab='H2O2 fraction', ylab='viability')
points( Tv, 0.5, pch=19, col="blue", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Cv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="black", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Cb",side=1,at=c(Tb) );
# logistical models for Parnell's thesis on H2O2-LOH effect
#these are my old function for CLS-H2O2
logistical.viability <- function( T, w, t ) { ret <- 1 /( 1 + ( t / T )^ w );  }
logistical.black     <- function(b.max, b.min, T, w, t ) { ret <- b.max - (b.max - b.min) /( 1 + ( t / T )^ w );  }
Tv = 0.05
Tb = 0.015
t = seq(0, 0.3, by=0.001)
w = 2;
pdf( 'diagram-CbCv.pdf',width=6,height=5)
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5), xlab='H2O2 fraction', ylab='viability')
points( Tv, 0.5, pch=19, col="blue", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Cv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="black", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Cb",side=1,at=c(Tb) );
dev.off()
setwd("~/projects/LOH-oxidants2012.osX/model-diagram")
# logistical models for Parnell's thesis on H2O2-LOH effect
setwd("~/projects/LOH-oxidants2012.osX/model-diagram")
#these are my old function for CLS-H2O2
logistical.viability <- function( T, w, t ) { ret <- 1 /( 1 + ( t / T )^ w );  }
logistical.black     <- function(b.max, b.min, T, w, t ) { ret <- b.max - (b.max - b.min) /( 1 + ( t / T )^ w );  }
Tv = 0.05
Tb = 0.015
t = seq(0, 0.3, by=0.001)
w = 2;
pdf( 'diagram-CbCv.pdf',width=6,height=5)
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5), xlab='H2O2 fraction', ylab='viability')
points( Tv, 0.5, pch=19, col="blue", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Cv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="black", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Cb",side=1,at=c(Tb) );
dev.off()
# logistical models for Parnell's thesis on H2O2-LOH effect
setwd("~/projects/LOH-oxidants2012.osX/model-diagram")
#these are my old function for CLS-H2O2
logistical.viability <- function( T, w, t ) { ret <- 1 /( 1 + ( t / T )^ w );  }
logistical.black     <- function(b.max, b.min, T, w, t ) { ret <- b.max - (b.max - b.min) /( 1 + ( t / T )^ w );  }
Tv = 0.05
Tb = 0.015
t = seq(0, 0.3, by=0.001)
w = 2;
pdf( 'diagram-CbCv.pdf',width=6,height=5)
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5), xlab='H2O2 fraction', ylab='viability')
points( Tv, 0.5, pch=19, col="red", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Cv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="orange", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Cb",side=1,at=c(Tb) );
dev.off()
# logistical models for Parnell's thesis on H2O2-LOH effect
setwd("~/projects/LOH-oxidants2012.osX/model-diagram")
#these are my old function for CLS-H2O2
logistical.viability <- function( T, w, t ) { ret <- 1 /( 1 + ( t / T )^ w );  }
logistical.black     <- function(b.max, b.min, T, w, t ) { ret <- b.max - (b.max - b.min) /( 1 + ( t / T )^ w );  }
Tv = 0.05
Tb = 0.015
t = seq(0, 0.3, by=0.001)
w = 2;
pdf( 'diagram-CbCv.pdf',width=6,height=5)
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5), xlab='H2O2 fraction', ylab='viability')
points( Tv, 0.5, pch=19, col="red", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Cv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="orange", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Cb",side=1,at=c(Tb) );
dev.off()
# logistical models for Parnell's thesis on H2O2-LOH effect
setwd("~/projects/LOH-oxidants2012.osX/model-diagram")
#these are my old function for CLS-H2O2
logistical.viability <- function( T, w, t ) { ret <- 1 /( 1 + ( t / T )^ w );  }
logistical.black     <- function(b.max, b.min, T, w, t ) { ret <- b.max - (b.max - b.min) /( 1 + ( t / T )^ w );  }
Tv = 0.045
Tb = 0.013
t = seq(0, 0.3, by=0.001)
w = 2;
pdf( 'diagram-CbCv.pdf',width=6,height=5)
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5), xlab='H2O2 fraction', ylab='viability')
points( Tv, 0.5, pch=19, col="red", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Cv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="orange", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Cb",side=1,at=c(Tb) );
dev.off()
# logistical models for Parnell's thesis on H2O2-LOH effect
setwd("~/projects/LOH-oxidants2012.osX/model-diagram")
#these are my old function for CLS-H2O2
logistical.viability <- function( T, w, t ) { ret <- 1 /( 1 + ( t / T )^ w );  }
logistical.black     <- function(b.max, b.min, T, w, t ) { ret <- b.max - (b.max - b.min) /( 1 + ( t / T )^ w );  }
Tv = 0.045
Tb = 0.013
t = seq(0, 0.3, by=0.001)
w = 2;
pdf( 'diagram-CbCv.pdf',width=6,height=5)
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5), xlab='H2O2 fraction', ylab='viability')
points( Tv, 0.5, pch=19, col="red", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Cv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="orange", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Cb",side=1,at=c(Tb) );
dev.off()
# logistical models for Parnell's thesis on H2O2-LOH effect
setwd("~/projects/LOH-oxidants2012.osX/model-diagram")
#these are my old function for CLS-H2O2
logistical.viability <- function( T, w, t ) { ret <- 1 /( 1 + ( t / T )^ w );  }
logistical.black     <- function(b.max, b.min, T, w, t ) { ret <- b.max - (b.max - b.min) /( 1 + ( t / T )^ w );  }
Tv = 0.042
Tb = 0.013
t = seq(0, 0.3, by=0.001)
w = 2;
pdf( 'diagram-CbCv.pdf',width=6,height=5)
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5), xlab='H2O2 fraction', ylab='viability')
points( Tv, 0.5, pch=19, col="red", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Cv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="orange", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Cb",side=1,at=c(Tb) );
dev.off()
# logistical models for Parnell's thesis on H2O2-LOH effect
setwd("~/projects/LOH-oxidants2012.osX/model-diagram")
#these are my old function for CLS-H2O2
logistical.viability <- function( T, w, t ) { ret <- 1 /( 1 + ( t / T )^ w );  }
logistical.black     <- function(b.max, b.min, T, w, t ) { ret <- b.max - (b.max - b.min) /( 1 + ( t / T )^ w );  }
Tv = 0.042
Tb = 0.013
t = seq(0, 0.3, by=0.001)
w = 2;
pdf( 'diagram-CbCv.pdf',width=6,height=5)
v = logistical.viability( Tv, w, t)
plot( v ~ t, type='l', col='blue', log='x', xlim=c(0.001,0.5), xlab='H2O2 fraction', ylab='viability')
points( Tv, 0.5, pch=19, col="red", cex=1.2 );
arrows( Tv, 0.5, Tv, -1, lty=2, col="red");
mtext( "Cv",side=1,at=c(Tv) );
par(new=T)
b.max = 0.04; b.min = 0.002;
b = logistical.black( b.max, b.min, Tb, w, t)
plot( b ~ t, log='x', axes=F, xlab='', ylab='', type='l')
axis(4, pretty(range(b)))
points( Tb, (b.max+b.min)/2, pch=19, col="orange", cex=1.2 );
arrows( Tb, (b.max+b.min)/2, Tb, -1, lty=2, col="orange");
mtext( "Cb",side=1,at=c(Tb) );
dev.off()
